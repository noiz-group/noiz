image: python:3.8

stages:
  - testing
  - linting
  - documentation
  - documentation-deployment
  - image-building
  - downstream

variables:
   UNITTESTING_IMAGE_TAG: $CI_REGISTRY_IMAGE:unittesting

.install_noiz_complete: &install_noiz_complete
  - python -m pip install --upgrade pip setuptools wheel
  - python -m pip install --no-cache-dir -r requirements.txt
  - python -m pip install .

test-noiz:
  image: $UNITTESTING_IMAGE_TAG
  stage: testing
  script:
    - pytest --cov=noiz

type-check:
  image: $UNITTESTING_IMAGE_TAG
  stage: linting
  script:
    - mypy src/noiz

flake8:
  image: $UNITTESTING_IMAGE_TAG
  stage: linting
  script:
    - flake8 .

build-docs:
  image: $UNITTESTING_IMAGE_TAG
  stage: documentation
  script:
  - cd docs
  - make html
  artifacts:
    paths:
    - docs/_build/html/
#  only:
#    - master

pages:
  stage: documentation-deployment
  image: alpine
  script:
  - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
  - master

#test_build:
#  stage: image-building
#  image: docker:19.03.12
#  services:
#    - docker:19.03.12-dind
#  variables:
#    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
#    DOCKER_HOST: tcp://docker:2376
#    DOCKER_TLS_CERTDIR: "/certs"
#    IMAGE_TAG: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_REF_SLUG
#  script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_TAG .
#    - docker push $IMAGE_TAG
#  except:
#  - master

latest_build:
  stage: image-building
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
  - master

build_unittesting:
 stage: image-building
 image: docker:19.03.12
 services:
   - docker:19.03.12-dind
 variables:
   UNITTESTING_IMAGE_TAG: $CI_REGISTRY_IMAGE:unittesting
 script:
   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
   - docker build -f docker/unittest-image/Dockerfile -t $IMAGE_TAG .
   - docker push $IMAGE_TAG
# only:
# - master

trigger_airflow_master:
  stage: downstream
  image: alpine
  script:
    - apk update && apk add curl
    - "curl -X POST -F token=$TOKEN_TRIGGER_MASTER_AIRFLOW -F ref=master https://gitlab.com/api/v4/projects/13151521/trigger/pipeline"
  only:
  - master
