# SPDX-License-Identifier: CECILL-B
# Copyright © 2015-2019 EOST UNISTRA, Storengy SAS, Damian Kula
# Copyright © 2019-2023 Contributors to the Noiz project.

include: # include our template script collection
    - local: "/.gitlab/templates/linting.yml"
    - local: "/.gitlab/templates/documentation.yml"


image: ghcr.io/astral-sh/uv:python3.10-bookworm

stages:
  - testing
  - linting
  - documentation
  - documentation-deployment
  - image-building
  - system-testing
  - downstream

cache:
  key: mypy-pip-pytest-cache
  paths:
    - .mypy-cache/
    - .pytest_cache/
    - .cache/pip
  policy: pull-push

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  POSTGRES_IMAGE_TAG: $CI_REGISTRY_IMAGE:postgres
  STABLE_IMAGE_TAG: $CI_REGISTRY_IMAGE:stable
  LATEST_IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  BRANCH_IMAGE_TAG: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_SHORT_SHA
  DIND_IMAGE: docker:24.0.5
  DIND_SERVICE: docker:24.0.5-dind
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

test-noiz:
  image: ghcr.io/astral-sh/uv:python3.10-bookworm
  stage: testing
  before_script:
    - uv sync --all-groups
  script:
    - uv run pytest --cov=noiz

.image_building_parent:
  stage: image-building
  image: $DIND_IMAGE
  services:
    - $DIND_SERVICE
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export DOCKER_BUILDKIT=1

test_build:
  extends: .image_building_parent
  script:
    - docker build -f docker/noiz-image/Dockerfile --cache-from $LATEST_IMAGE_TAG -t $BRANCH_IMAGE_TAG .
  after_script:
    - docker push $BRANCH_IMAGE_TAG

latest_build:
  extends: .image_building_parent
  script:
    - docker build -f docker/noiz-image/Dockerfile -t $LATEST_IMAGE_TAG .
  after_script:
    - docker push $LATEST_IMAGE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stable_build:
  extends: .image_building_parent
  script:
    - docker build -f docker/noiz-image/Dockerfile -t $LATEST_IMAGE_TAG -t $STABLE_IMAGE_TAG .
  after_script:
    - docker push $LATEST_IMAGE_TAG $STABLE_IMAGE_TAG
  rules:
    - if: $CI_COMMIT_TAG

build_postgres:
  extends: .image_building_parent
  script:
    - docker build -f docker/postgres-image/Dockerfile -t $POSTGRES_IMAGE_TAG .
  after_script:
    - docker push $POSTGRES_IMAGE_TAG
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - docker/postgres-image/Dockerfile

.system_test_parent:
  stage: system-testing
  image: $BRANCH_IMAGE_TAG
  services:
    - name: $POSTGRES_IMAGE_TAG
      alias: postgres
  variables:
    POSTGRES_HOST: postgres
    POSTGRES_PORT: "5432"
    POSTGRES_USER: noiztest
    POSTGRES_PASSWORD: noiztest
    POSTGRES_DB: noiztest
    PROCESSED_DATA_DIR: /processed-data-dir
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - uv sync --all-groups
    - uv pip install --no-cache-dir -e .
    - mkdir -p $PROCESSED_DATA_DIR
#    - uv run noiz db init
    - uv run noiz db migrate
    - uv run noiz db upgrade
#
#api_system_tests:
#  extends: .system_test_parent
#  script:
#    - pytest --cov=noiz --runapi

cli_system_tests:
  extends: .system_test_parent
  script:
    - SQLALCHEMY_WARN_20=1 uv run pytest --cov=noiz --runcli
    - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format:  cobertura
        path: coverage.xml

cli_system_tests_parallel:
  extends: .system_test_parent
  variables:
    NOIZ_RUN_SYSTEM_TESTS_PARALLEL: "True"
  script:
    - SQLALCHEMY_WARN_20=1 uv run pytest --runcli
  allow_failure: true
